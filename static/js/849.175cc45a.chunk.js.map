{"version":3,"file":"static/js/849.175cc45a.chunk.js","mappings":"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","sources":["components/get-post-button/get-posts-button.tsx","utils/index.ts","components/user/user.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/users-list/users-list.tsx"],"sourcesContent":["import { setClicked, setClickedBackBtn, setUserId, setVisible } from '../../redux/actions';\r\nimport { useAppDispatch } from '../../hooks';\r\n\r\ntype GetPostsButtonProps = {\r\n  id: number;\r\n};\r\n\r\nexport default function GetPostsButton({ id }: GetPostsButtonProps) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <button\r\n      className=\"postBtn\"\r\n      onClick={() => {\r\n        dispatch(setClicked(true));\r\n        dispatch(setUserId(id));\r\n        dispatch(setClickedBackBtn(false));\r\n        dispatch(setVisible(true));\r\n      }}\r\n    >\r\n        Get Posts\r\n    </button>\r\n  );\r\n}\r\n","import { DraggingStyle, NotDraggingStyle } from 'react-beautiful-dnd';\r\n\r\nconst green = '#02d18c';\r\nconst pink = '#f3b4c4';\r\n\r\n\r\nexport const getItemStyle = (\r\n  isDragging: boolean,\r\n  DraggableStyle: DraggingStyle | NotDraggingStyle | undefined) => ({\r\n  ...DraggableStyle,\r\n  background: isDragging ? green : pink\r\n});\r\n","import { useState } from 'react';\r\nimport GetPostsButton from '../get-post-button/get-posts-button';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { UserType } from '../../types/user';\r\nimport { getItemStyle } from '../../utils';\r\n\r\ntype UserProps = {\r\n  index: number;\r\n  props: UserType;\r\n}\r\n\r\nexport default function User({ props, index }: UserProps) {\r\n  const {...properties} = props;\r\n\r\n  const [isMouseOver, setMouseOver] = useState<boolean>(false);\r\n\r\n  return (\r\n    <article>\r\n      <div data-testid={isMouseOver}\r\n        className=\"user-container\"\r\n        onMouseOver={() => {\r\n          setMouseOver(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setMouseOver(false);\r\n        }}\r\n      >\r\n        <Draggable\r\n          draggableId={`${index}`}\r\n          index={index}\r\n          key={index}\r\n        >\r\n          {(provided, snapshot) => (\r\n            <div className=\"user-description-list\"\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              {...provided.draggableProps}\r\n              style={\r\n                getItemStyle(\r\n                  snapshot.isDragging,\r\n                  provided.draggableProps.style)\r\n              }\r\n            >\r\n              <ul>\r\n                <li className=\"name\">{properties.name}</li>\r\n                <li className=\"email\">{properties.email}</li>\r\n                <li className=\"phone\">{properties.phone}</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n        {isMouseOver &&\r\n        <GetPostsButton\r\n          id={properties.id}\r\n        />}\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { useEffect, lazy, Suspense } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks';\r\nimport User from '../user/user';\r\nimport { UserType } from '../../types/user';\r\nimport { fetchUsers } from '../../redux/actions';\r\nimport Spinner from '../spinner';\r\n\r\nconst PostsListComponent = lazy(() => import('../posts-list/posts-list'));\r\n\r\ntype Users = {\r\n  users: UserType[];\r\n}\r\n\r\nfunction UsersList({users}: Users){\r\n  const isClicked = useAppSelector((state) => state.isClicked);\r\n  const userId = useAppSelector((state) => state.id);\r\n  const isClickedBackBtn = useAppSelector((state) => state.isClickedBackBtn);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data: UserType[]) => {\r\n        dispatch(fetchUsers(data));\r\n      })\r\n      .catch((error) => `Could not fetch data: ${error}`\r\n      );\r\n\r\n  }, [dispatch]);\r\n\r\n  return(\r\n    isClicked && !isClickedBackBtn ? (\r\n      <Suspense fallback={<Spinner/>}>\r\n        <PostsListComponent\r\n          id={userId}\r\n        />\r\n      </Suspense>\r\n    ) : (\r\n      <div className=\"users-list-container\">\r\n        {users.length > 0 &&\r\n          users.map((user, index) => (\r\n            <User\r\n              props={user}\r\n              key={user.id}\r\n              index={index}\r\n            />\r\n          ))}\r\n      </div>\r\n    ));\r\n}\r\n\r\nexport default UsersList;\r\n"],"names":["GetPostsButton","_ref","id","dispatch","useAppDispatch","_jsx","className","onClick","setClicked","setUserId","setClickedBackBtn","setVisible","children","getItemStyle","isDragging","DraggableStyle","_objectSpread","background","User","props","index","properties","Object","assign","obj","TypeError","_objectDestructuringEmpty","isMouseOver","setMouseOver","useState","_jsxs","onMouseOver","onMouseLeave","Draggable","draggableId","concat","provided","snapshot","ref","innerRef","dragHandleProps","draggableProps","style","name","email","phone","PostsListComponent","lazy","users","isClicked","useAppSelector","state","userId","isClickedBackBtn","useEffect","fetch","then","response","ok","Error","status","json","data","fetchUsers","catch","error","Suspense","fallback","Spinner","length","map","user"],"sourceRoot":""}