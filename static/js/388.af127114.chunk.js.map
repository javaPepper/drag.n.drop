{"version":3,"file":"static/js/388.af127114.chunk.js","mappings":"qKAOe,SAASA,EAAIC,GAA6C,IAA5C,OAAEC,EAAM,GAAEC,EAAE,MAAEC,EAAK,QAAEC,GAAoBJ,EACpE,OACEK,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBN,GAAIA,EAAGO,WAAWH,SAAA,EAChDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAEL,KACnCI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,KAAIF,SAAEJ,KACrBG,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYF,SAAEH,KAC7BE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcF,SAAEF,QAIvC,C,aCRe,SAASM,EAASV,GAA0B,IAAzB,GAAEE,GAAoBF,EAEtD,MAAMW,GAAQC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMF,QACxCG,GAAWC,EAAAA,EAAAA,KAgBjB,OAdAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,8CACHC,MAAMC,IACL,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,eAADC,OAAgBH,EAASI,SAE1C,OAAOJ,EAASK,MAAM,IAEvBN,MAAMO,IACLX,GAASY,EAAAA,EAAAA,IAAWD,GAAM,IAE3BE,OAAOC,GAAK,yBAAAN,OAA8BM,IAAQ,GACpD,CAACd,KAGFT,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,SACjCK,EAAMkB,OAAS,GACdlB,EACGmB,QAAQC,GAAOA,EAAG9B,SAAWC,IAC7B8B,KAAKC,IACJ5B,EAAAA,EAAAA,KAACN,EAAI,CACHE,OAAQgC,EAAKhC,OACbC,GAAI+B,EAAK/B,GACTC,MAAO8B,EAAK9B,MACZC,QAAS6B,EAAKC,MACTD,EAAK/B,OAKxB,C","sources":["components/post/post.tsx","components/posts-list/posts-list.tsx"],"sourcesContent":["type PostProps = {\r\n  userId: number;\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n};\r\n\r\nexport default function Post({ userId, id, title, content }: PostProps) {\r\n  return (\r\n    <article>\r\n      <div className=\"post-container\" id={id.toString()}>\r\n        <span className=\"visually-hidden\">{userId}</span>\r\n        <div className=\"id\">{id}</div>\r\n        <div className=\"post title\">{title}</div>\r\n        <div className=\"post content\">{content}</div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport {useAppDispatch, useAppSelector } from '../../hooks';\r\nimport Post from '../post/post';\r\nimport { PostType } from '../../types/post';\r\nimport { fetchPosts } from '../../redux/actions';\r\n\r\ntype PostsListProps = {\r\n  id: number;\r\n};\r\n\r\nexport default function PostsList({ id }: PostsListProps) {\r\n\r\n  const posts = useAppSelector((state) => state.posts);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then((response) => {\r\n        if(!response.ok) {\r\n          throw new Error(`HTTP error: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data: PostType[]) => {\r\n        dispatch(fetchPosts(data));\r\n      })\r\n      .catch((error) => `Could not fetch data: ${error}`);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"post-list_container\">\r\n      {posts.length > 0 &&\r\n        posts\r\n          .filter((el) => el.userId === id)\r\n          .map((post) => (\r\n            <Post\r\n              userId={post.userId}\r\n              id={post.id}\r\n              title={post.title}\r\n              content={post.body}\r\n              key={post.id}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Post","_ref","userId","id","title","content","_jsx","children","_jsxs","className","toString","PostsList","posts","useAppSelector","state","dispatch","useAppDispatch","useEffect","fetch","then","response","ok","Error","concat","status","json","data","fetchPosts","catch","error","length","filter","el","map","post","body"],"sourceRoot":""}